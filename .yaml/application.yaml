spring:
  redis:
    host: localhost
    port: 6379
    database: 1
  shardingsphere:
    datasource:
      names: ds-user,ds-order,ds-quartz,ds-pay,ds-product
      ds-user:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db_user?useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 15947035212
      ds-order:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db_order?useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 15947035212
      ds-quartz:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db_quartz?useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 15947035212
      ds-pay:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db_pay?useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 15947035212
      ds-product:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db_product?useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 15947035212
    sharding:
      tables:
        #db-user
        user:
          actual-data-nodes: ds-user.user_$->{0..9}
          table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: user_$->{user_id % 10}
        #db-pay
        payment-info:
          actual-data-nodes: ds-pay.payment_info_$->{0..9}
          table-strategy:
            inline:
              sharding-column: payment_id
              algorithm-expression: payment_info_$->{payment_id % 10}
        refund-info:
          actual-data-nodes: ds-pay.refund_info_$->{0..9}
          table-strategy:
            inline:
              sharding-column: refund_id
              algorithm-expression: refund_info_$->{refund_id % 10}
        #db-order
        order-master:
          actual-data-nodes: ds-order.order_master_$->{0..9}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: order_master_$->{order_id % 10}
        order-item:
          actual-data-nodes: order_item_$->{0..9}
          table-strategy:
            inline:
              sharding-column: item_id
              algorithm-expression: order_item_$->{item_id % 10}
        order-operation:
          actual-data-nodes: order_operation_log_$->{0..9}
          table-strategy:
            inline:
              sharding-column: log_id
              algorithm-expression: order_operation_$->{log_id % 10}
        #db-product
        product-brand:
          actual-data-nodes: ds-product.product_brand
        product-category:
          actual-data-nodes: ds-product.product_category
        product-spu:
          actual-data-nodes: ds-product.product_spu
        product-sku:
          actual-data-nodes: ds-product.product_sku_$->{0..9}
          table-strategy:
            inline:
              sharding-column: sku_id
              algorithm-expression: product_sku_$->{sku_id % 10}
        product-image:
          actual-data-nodes: ds-product.product_image_$->{0..9}
          table-strategy:
            inline:
              sharding-column: image_id
              algorithm-expression: product_image_$->{image_id % 10}
        product-attribute:
          actual-data-nodes: ds-product.product_attribute_$->{0..9}
          table-strategy:
            inline:
              sharding-column: attr_id
              algorithm-expression: product_attribute_$->{attr_id % 10}
        inventory-log:
          actual-data-nodes: ds-product.inventory_log_$->{0..9}
          table-strategy:
            inline:
              sharding-column: log_id
              algorithm-expression: inventory_log_$->{log_id % 10}

    props:
      sql:
        show: false

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: cn.bit.pojo.po
  configuration:
    map-underscore-to-camel-case: true
